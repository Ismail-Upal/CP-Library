-----------------------------------------
Find divisors sqrt : O(sqrt(N))
-----------------------------------------
vector<int> find_divisors(int n) {
    vector<int> divisors;
    for (int i = 1; i * i <= n; ++i) {
        if (n % i == 0) {
            divisors.push_back(i);
            if (i != n / i) {
                divisors.push_back(n / i);
            }
        }
    }
    return divisors;
}
------------------------------------------
Find number of divisors from 1 to N : O(NlogN)
------------------------------------------
const int N = 1e6 + 9;
int d[N];
int main() {
    for (int i = 1; i < N; ++i) {
        for (int j = i; j < N; j += i) {
            d[j]++;
        }
    }
}
------------------------------------------
Is Prime or not : O(sqrt(N))
------------------------------------------
bool is_prime(int n){ 
    if(n == 2) return true;
    if(n == 1 or n % 2 == 0) return false;
    
    for(int i = 3; i * i <= n; i += 2){
        if(n % i == 0) return false;
    }
    return true;
}
------------------------------------------
